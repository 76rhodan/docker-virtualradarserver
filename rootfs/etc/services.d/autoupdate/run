#!/usr/bin/with-contenv bash
#shellcheck shell=bash

APPNAME="$(hostname)/autoupdate"
VRS_DIR="/opt/vrs"
VRS_CONFIG_DIR="/root/.local/share/VirtualRadar"
VRS_EXTENSION_DIR="/root/.local/share/VirtualRadar/CustomContent/CustomInjectedFiles"

#Silhouettes, OpFlags and DB
SILH_LINK="https://github.com/rikgale/VRSOperatorFlags/raw/main/Silhouettes.zip"
FLAGS_LINK="https://github.com/rikgale/VRSOperatorFlags/raw/main/OperatorFlags.zip"
FLAGSDB_LINK="https://github.com/rikgale/VRSData/raw/main/BaseStation.zip"

#rickgales extras
#LocalAircraft.txt
EXT_LOCALAC_LINK="https://raw.githubusercontent.com/rikgale/LocalAircraft/main/LocalAircraft.txt"
#ExtraMarkers
EXT_MARKERS_LINK="https://raw.githubusercontent.com/rikgale/VRSCustomMarkers/main/MyMarkers1.html"

#Variables for optimized downloads
WHICHREPO="https://api.github.com/repos/rikgale/VRSOperatorFlags/branches"
WHICHBRANCH="main"
ACTUALFILE="$VRS_CONFIG_DIR/commitid"
#the same for CustomMarkers
WHICHREPO_CM="https://api.github.com/repos/rikgale/VRSCustomMarkers/branches"
WHICHBRANCH_CM="main"
ACTUALFILE_CM="$VRS_CONFIG_DIR/commitid_cm"

#Interval of updatecheck
UPDATEINTERVAL=6h

#Give VRS a bit of time to start
sleep 10

#Who we are and what we are doing
echo "[$APPNAME][$(date)] Autoupdate service started. Next run in $UPDATEINTERVAL"

#Let's go
while true
do
     #we need these two in the loop, otherwise they will never get updated
     ACTUAL=$(<"$ACTUALFILE")
     PROBE=$(curl -sH "Accept: application/vnd.github.v3+json" $WHICHREPO | awk  "c&&!--c;/$WHICHBRANCH/{c=2}" | awk '/"sha"/ { print $2}' | sed 's/"//g;s/.$//g')
     #The same check as above but for the custom markers
     ACTUAL_CM=$(<"$ACTUALFILE_CM")
     PROBE_CM=$(curl -sH "Accept: application/vnd.github.v3+json" $WHICHREPO_CM | awk  "c&&!--c;/$WHICHBRANCH_CM/{c=2}" | awk '/"sha"/ { print $2}' | sed 's/"//g;s/.$//g')
     #we most probably just started the container, let's wait a bit first as we already have pretty recent files
#     sleep $UPDATEINTERVAL
     #Here are some files we're gonna update anyway, no matter of repo updates
     echo "[$APPNAME][$(date)] Updating LocalAircraft.txt"
      if curl -s -L -o "${VRS_CONFIG_DIR}/LocalAircraft.txt" ${EXT_LOCALAC_LINK}
       then
        echo "[$APPNAME][$(date)] LocalAircraft.txt downloaded and installed successfully"
       else
        echo "[$APPNAME][$(date)] LocalAircraft.txt - failure"
      fi

     #if there is a change in the commit ID, download and install sil/opflags
     echo "[$APPNAME][$(date)] ----------------------------------------"
     echo "[$APPNAME][$(date)] Looking for Sil / Operator Flags updates"
     if ! [[ $ACTUAL == $PROBE ]]
      then
       echo "[$APPNAME][$(date)] Looks like there was an update for Sil /Operator Flags. Going to download the files"
       echo $PROBE > $ACTUALFILE
       echo "[$APPNAME][$(date)] Updated $ACTUALFILE to commit ID $PROBE"
       if curl --compressed -s -L -o "${VRS_CONFIG_DIR}/silhouettes.zip" ${SILH_LINK} && unzip -u -qq -o -d "${VRS_CONFIG_DIR}/silhouettes" "${VRS_CONFIG_DIR}/silhouettes.zip"
        then
         echo "[$APPNAME][$(date)] Silhouettes installed successfully"
         else
         echo "[$APPNAME][$(date)] Silhouettes not installed - failure"
       fi

     #download and install operator flags
       if curl --compressed -s -L -o "${VRS_CONFIG_DIR}/OperatorFlags.zip" ${FLAGS_LINK} && unzip -u -qq -o -d "${VRS_CONFIG_DIR}/flags" "${VRS_CONFIG_DIR}/OperatorFlags.zip"
        then
         echo "[$APPNAME][$(date)] Operator Flags installed successfully"
        else
         echo "[$APPNAME][$(date)] Operator Flags not installed - failure"
       fi
      else
       echo "[$APPNAME][$(date)] No changes found, nothing was downloaded."
     fi
     #looking for updates of the custom markers html file
     echo "[$APPNAME][$(date)] ----------------------------------------"
     echo "[$APPNAME][$(date)] Looking for updates for the custom markers file"
     if ! [[ $ACTUAL_CM == $PROBE_CM ]]
       then
        echo "[$APPNAME][$(date)] Looks like there was an update for the custom markers. Going to download the file"
        echo $PROBE_CM > $ACTUALFILE_CM
        echo "[$APPNAME][$(date)] Updated $ACTUALFILE_CM to commit ID $PROBE_CM"
        if curl -s -L -o "${VRS_EXTENSION_DIR}/MyMarkers1.html" ${EXT_MARKERS_LINK}
         then
          echo "[$APPNAME][$(date)] New custom marker file installed successfully"
          else
          echo "[$APPNAME][$(date)] New custom marker file not installed - failure"
        fi
      else  
       echo "[$APPNAME][$(date)] No changes found, nothing was downloaded."
     fi      
     #cleaning up downloaded files
     [[ -f "${VRS_CONFIG_DIR}/silhouettes.zip" ]] && rm -f "${VRS_CONFIG_DIR}/silhouettes.zip"
     [[ -f "${VRS_CONFIG_DIR}/OperatorFlags.zip" ]] && rm -f "${VRS_CONFIG_DIR}/OperatorFlags.zip"
     echo "[$APPNAME][$(date)] Cleaned up downloaded files - if any"
     echo "[$APPNAME][$(date)] Finished. Next run in $UPDATEINTERVAL"
     echo "[$APPNAME][$(date)] ----------------------------------------"
#sleep a bit until the next run
  sleep $UPDATEINTERVAL
done
