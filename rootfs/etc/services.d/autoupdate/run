#!/usr/bin/with-contenv bash
#shellcheck shell=bash

APPNAME="$(hostname)/autoupdate"
VRS_DIR="/opt/vrs"
VRS_CONFIG_DIR="/root/.local/share/VirtualRadar"

#Silhouettes, OpFlags and DB
SILH_LINK="https://github.com/rikgale/VRSOperatorFlags/raw/main/Silhouettes.zip"
FLAGS_LINK="https://github.com/rikgale/VRSOperatorFlags/raw/main/OperatorFlags.zip"
FLAGSDB_LINK="https://github.com/rikgale/VRSOperatorFlags/raw/main/BaseStation.zip"

#Variables for optimized downloads
WHICHREPO="https://api.github.com/repos/rikgale/VRSOperatorFlags/branches"
WHICHBRANCH="main"
ACTUALFILE="$VRS_CONFIG_DIR/commitid"

#Interval of updatecheck
UPDATEINTERVAL=6h

#Give VRS a bit of time to start
sleep 10

#Who we are and what we are doing
echo "[$APPNAME][$(date)] Autoupdate for Sil / Operator Flags started. Next run in $UPDATEINTERVAL"

#Let's go
while true
do
     #we need these two in the loop, otherwise they will never get updated
     ACTUAL=$(<"$ACTUALFILE")
     PROBE=$(curl -sH "Accept: application/vnd.github.v3+json" $WHICHREPO | awk  "c&&!--c;/$WHICHBRANCH/{c=2}" | awk '/"sha"/ { print $2}' | sed 's/"//g;s/.$//g')
     #we most probably just started the container, let's wait a bit first as we already have pretty recent files
     sleep $UPDATEINTERVAL
     #if there is a change in the commit ID, download and install sil/opflags
     echo "[$APPNAME][$(date)] ----------------------------------------"
     echo "[$APPNAME][$(date)] Looking for Sil / Operator Flags updates"
     if ! [[ $ACTUAL == $PROBE ]]
      then
       echo "[$APPNAME][$(date)] Looks like there was an update for Sil /Operator Flags. Going to download the files"
       echo $PROBE > $ACTUALFILE
       echo "[$APPNAME][$(date)] Updated $ACTUALFILE to commit ID $PROBE"
       if curl --compressed -s -L -o "${VRS_CONFIG_DIR}/silhouettes.zip" ${SILH_LINK} && unzip -qq -o -d "${VRS_CONFIG_DIR}/silhouettes" "${VRS_CONFIG_DIR}/silhouettes.zip"
        then
         echo "[$APPNAME][$(date)] Silhouettes installed successfully"
         else
         echo "[$APPNAME][$(date)] Silhouettes not installed - failure"
       fi

     #download and install operator flags
       if curl --compressed -s -L -o "${VRS_CONFIG_DIR}/OperatorFlags.zip" ${FLAGS_LINK} && unzip -qq -o -d "${VRS_CONFIG_DIR}/flags" "${VRS_CONFIG_DIR}/OperatorFlags.zip"
        then
         echo "[$APPNAME][$(date)] Operator Flags installed successfully"
        else
         echo "[$APPNAME][$(date)] Operator Flags not installed - failure"
       fi
      else
       echo "[$APPNAME][$(date)] No changes found, nothing was downloaded."
     fi
     #cleaning up downloaded files
     [[ -f "${VRS_CONFIG_DIR}/silhouettes.zip" ]] && rm -f "${VRS_CONFIG_DIR}/silhouettes.zip"
     [[ -f "${VRS_CONFIG_DIR}/OperatorFlags.zip" ]] && rm -f "${VRS_CONFIG_DIR}/OperatorFlags.zip"
     echo "[$APPNAME][$(date)] Cleaned up downloaded files."
     echo "[$APPNAME][$(date)] Finished. Next run in $UPDATEINTERVAL"
     echo "[$APPNAME][$(date)] ----------------------------------------"
done
