#!/usr/bin/with-contenv bash
#shellcheck shell=bash

APPNAME="$(hostname)/vrs-init"
VRS_DIR="/opt/vrs"
VRS_EXEC="mono VirtualRadar.exe"
VRS_CMDLINE=()
VRS_CMDLINE+=("-nogui")
VRS_CMDLINE+=("-createAdmin:${VRS_ADMIN_USERNAME}")
VRS_CMDLINE+=("-password:${VRS_ADMIN_PASSWORD}")
VRS_CONFIG_DIR="/root/.local/share/VirtualRadar"
SILH_LINK="https://github.com/rikgale/VRSOperatorFlags/raw/main/Silhouettes.zip"
FLAGS_LINK="https://github.com/rikgale/VRSOperatorFlags/raw/main/OperatorFlags.zip"

MAXTIME=15

echo "[$APPNAME][$(date)] Initializing Virtual Radar Server..."

mkdir -p "${VRS_CONFIG_DIR}/flags"
mkdir -p "${VRS_CONFIG_DIR}/silhouettes"
mkdir -p "${VRS_CONFIG_DIR}/photos"

if curl --compressed -s -L -o "${VRS_CONFIG_DIR}/silhouettes.zip" ${SILH_LINK} && unzip -qq -o -d "${VRS_CONFIG_DIR}/silhouettes" "${VRS_CONFIG_DIR}/silhouettes.zip"
then
  echo "[$APPNAME][$(date)] Silhouettes installed successfully"
else
    echo "[$APPNAME][$(date)] Silhouettes not installed - failure"
fi

if curl --compressed -s -L -o "${VRS_CONFIG_DIR}/OperatorFlags.zip" ${FLAGS_LINK} && unzip -qq -o -d "${VRS_CONFIG_DIR}/flags" "${VRS_CONFIG_DIR}/OperatorFlags.zip"
then
  echo "[$APPNAME][$(date)] Operator Flags installed successfully"
else
    echo "[$APPNAME][$(date)] Operator Flags not installed - failure"
fi

# Starting VRS temporarily to create a username and password if none exist
# If VRS has been initialized previously, it will complain and exit
# If it hasn't, a username / password and a bunch of other files will be created...
#    ...and VRS will actually stay up and run. We will shut it down after a max runtime of $MAXTIME secs.
cd "${VRS_DIR}"

timeout $MAXTIME exec ${VRS_EXEC} ${VRS_CMDLINE[@]} >/dev/null 2>&1
echo "[$APPNAME][$(date)] Virtual Radar Server has been initialized."

exit 0
